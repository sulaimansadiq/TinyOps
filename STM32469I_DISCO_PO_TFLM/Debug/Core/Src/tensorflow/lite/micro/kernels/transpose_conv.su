gthr-default.h:229:1:int __gthread_key_delete(__gthread_key_t)	16	static
limits:1204:7:static constexpr long int std::numeric_limits<long int>::min()	4	static
limits:1207:7:static constexpr long int std::numeric_limits<long int>::max()	4	static
limits:1668:7:static constexpr float std::numeric_limits<float>::max()	4	static
limits:1672:7:static constexpr float std::numeric_limits<float>::lowest()	4	static
fixedpoint.h:329:21:IntegerType gemmlowp::SaturatingRoundingDoublingHighMul(IntegerType, IntegerType) [with IntegerType = long int]	64	static
types.h:156:3:tflite::RuntimeShape::RuntimeShape()	16	static
types.h:175:3:tflite::RuntimeShape::RuntimeShape(int, const int32_t*)	24	static
types.h:202:3:tflite::RuntimeShape::~RuntimeShape()	16	static
types.h:212:18:int32_t tflite::RuntimeShape::DimensionsCount() const	16	static
types.h:213:18:int32_t tflite::RuntimeShape::Dims(int) const	16	static
types.h:228:19:int32_t* tflite::RuntimeShape::DimsData()	16	static
types.h:231:25:const int32_t* tflite::RuntimeShape::DimsData() const	16	static
types.h:235:25:const int32_t* tflite::RuntimeShape::DimsDataUpTo5D() const	16	static
types.h:237:15:void tflite::RuntimeShape::Resize(int)	16	static
types.h:255:15:void tflite::RuntimeShape::ReplaceWith(int, const int32_t*)	32	static
types.h:289:14:int tflite::RuntimeShape::FlatSize() const	32	static
types.h:403:12:int tflite::Offset(const tflite::RuntimeShape&, int, int, int, int)	32	static
types.h:470:12:int tflite::MatchingDim(const tflite::RuntimeShape&, int, const tflite::RuntimeShape&, int)	40	static
common.h:156:16:int32_t tflite::MultiplyByQuantizedMultiplier(int32_t, int32_t, int)	32	static
transpose_conv.h:25:13:void tflite::reference_ops::TransposeConv(const tflite::ConvParams&, const tflite::RuntimeShape&, const float*, const tflite::RuntimeShape&, const float*, const tflite::RuntimeShape&, const float*, const tflite::RuntimeShape&, float*, const tflite::RuntimeShape&, float*)	160	static
transpose_conv.h:24:13:void tflite::reference_integer_ops::TransposeConv(const tflite::ConvParams&, const int32_t*, const int32_t*, const tflite::RuntimeShape&, const int8_t*, const tflite::RuntimeShape&, const int8_t*, const tflite::RuntimeShape&, const int32_t*, const tflite::RuntimeShape&, int8_t*, const tflite::RuntimeShape&, int8_t*, int32_t*)	184	static
tensor_ctypes.h:34:21:tflite::RuntimeShape tflite::GetTensorShape(const TfLiteTensor*)	32	static
kernel_util.h:152:12:int tflite::NumInputs(const TfLiteNode*)	16	static
padding.h:33:12:int tflite::ComputePaddingWithOffset(int, int, int, int, int, int*)	32	static
padding.h:45:12:int tflite::ComputeOutSize(TfLitePadding, int, int, int, int)	32	static
padding.h:58:28:TfLitePaddingValues tflite::ComputePaddingHeightWidth(int, int, int, int, int, int, int, int, TfLitePadding, int*, int*)	40	static
kernel_util.h:31:26:TfLiteEvalTensor* tflite::micro::GetMutableEvalInput(const TfLiteContext*, const TfLiteNode*, int)	24	static
kernel_util.h:40:32:const TfLiteEvalTensor* tflite::micro::GetEvalInput(const TfLiteContext*, const TfLiteNode*, int)	24	static
kernel_util.h:46:26:TfLiteEvalTensor* tflite::micro::GetEvalOutput(const TfLiteContext*, const TfLiteNode*, int)	24	static
transpose_conv.cc:55:20:tflite::PaddingType tflite::{anonymous}::RuntimePaddingType(TfLitePadding)	16	static
transpose_conv.cc:67:14:TfLiteStatus tflite::{anonymous}::CalculateOpData(TfLiteContext*, TfLiteNode*, const TfLiteConvParams*, int, int, int, int, int, int, TfLiteType, tflite::{anonymous}::OpData*)	136	static
transpose_conv.cc:113:7:void* tflite::{anonymous}::Init(TfLiteContext*, const char*, size_t)	24	static
transpose_conv.cc:118:14:TfLiteStatus tflite::{anonymous}::Prepare(TfLiteContext*, TfLiteNode*)	144	static
transpose_conv.cc:199:14:TfLiteStatus tflite::{anonymous}::Eval(TfLiteContext*, TfLiteNode*)	352	static
transpose_conv.cc:258:20:TfLiteRegistration tflite::Register_TRANSPOSE_CONV()	24	static
stl_algobase.h:222:5:constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long int]	16	static
stl_algobase.h:198:5:constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = long int]	16	static
fixedpoint.h:357:20:IntegerType gemmlowp::RoundingDivideByPOT(IntegerType, int) [with IntegerType = long int]	56	static
kernel_util.h:253:6:void tflite::CalculateActivationRange(TfLiteFusedActivation, T*, T*) [with T = float]	24	static
kernel_util.h:61:10:const T* tflite::micro::GetTensorData(const TfLiteEvalTensor*) [with T = float]	16	static
kernel_util.h:55:4:T* tflite::micro::GetTensorData(TfLiteEvalTensor*) [with T = float]	16	static
kernel_util.h:61:10:const T* tflite::micro::GetTensorData(const TfLiteEvalTensor*) [with T = signed char]	16	static
kernel_util.h:61:10:const T* tflite::micro::GetTensorData(const TfLiteEvalTensor*) [with T = long int]	16	static
kernel_util.h:55:4:T* tflite::micro::GetTensorData(TfLiteEvalTensor*) [with T = signed char]	16	static
fixedpoint.h:64:10:tRawType gemmlowp::Dup(typename gemmlowp::FixedPointRawTypeTraits<tRawType>::ScalarRawType) [with tRawType = long int]	16	static
fixedpoint.h:70:14:tIntegerType gemmlowp::BitAnd(tIntegerType, tIntegerType) [with tIntegerType = long int]	16	static
fixedpoint.h:140:14:tIntegerType gemmlowp::ShiftRight(tIntegerType, int) [with tIntegerType = long int]	16	static
fixedpoint.h:199:14:tIntegerType gemmlowp::MaskIfLessThan(tIntegerType, tIntegerType) [with tIntegerType = long int]	16	static
fixedpoint.h:94:14:tIntegerType gemmlowp::Add(tIntegerType, tIntegerType) [with tIntegerType = long int]	16	static
fixedpoint.h:185:14:tIntegerType gemmlowp::MaskIfGreaterThan(tIntegerType, tIntegerType) [with tIntegerType = long int]	16	static
fixedpoint.h:156:14:tIntegerType gemmlowp::MaskIfNonZero(tIntegerType) [with tIntegerType = long int]	16	static
fixedpoint.h:88:14:tIntegerType gemmlowp::BitNot(tIntegerType) [with tIntegerType = long int]	16	static
